@use "sass:math"
@use "sass:string"

@mixin block-size($width, $height: $width)
		width: $width
		height: $height

@mixin fontStyle($name, $type, $fileName, $weight, $style)
	@font-face
		font-family: $name
		font-display: swap
		src: url("../fonts/#{$fileName}.woff2") format("#{$type}")
		font-weight: $weight
		font-style: $style

@function adaptiveProperty($value, $min-value)
	@return calc(#{$min-value + px} + (#{$value} - #{$min-value}) * ((100vw - 320px) / (#{$layoutWidth} - 320)))

@function adaptiveFontSize($size-max, $size-min)
	$k: math.div(($size-max - $size-min), ($layoutWidth - 320))
	$b: $size-min - $k * 320

	$b: $b * 1px

	@return calc( #{$k} * 100vw + #{$b} )

@function rem($px-size)
	@return #{math.div($px-size, $mainFontSize)}rem

@function remNumber($px-size)
	@return #{math.div($px-size, $mainFontSize)}

@mixin flex-set($type, $wrap)
	display: flex
	flex-flow: $type $wrap

@mixin notLastChildMargin($values...)
	>*
		&:not(:last-child)
			margin: $values

@mixin hide()
	overflow: hidden
	opacity: 0
	pointer-events: none

@mixin show()
	overflow: auto
	opacity: 1
	pointer-events: all

@function replace($stringToReplace, $replace: '', $string)
	$index: str-index($string, $stringToReplace)

	@if $index
		@return str-slice($string, 1, $index - 1) + $replace

	@return $string

@mixin bg-img-multi-type($url, $params: null)
	background: url($url) $params

	// if (gulpHashes.canIncludeConvertedBg)
	// Creating new paths, removing extensions: .jpg and .png
	$webpUrl: replace('.png', '.webp', replace('.jpg', '.webp', $url))
	$avifUrl: replace('.png', '.avif', replace('.jpg', '.avif', $url))
	// Embedding new paths
	background-image: image-set(url($avifUrl) 1x, url($webpUrl) 1x, url($url) 1x )
	background-image: -webkit-image-set(url($avifUrl) 1x, url($webpUrl) 1x, url($url) 1x)

@mixin advansedPosition($position, $top, $right, $bottom, $left)
	position: $position
	top: $top
	right: $right
	bottom: $bottom
	left: $left